//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30
.address_size 64

	// .globl	_Z6raygenv
.global .align 4 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .f32 fov;
.global .align 16 .b8 diffuse[16];
.global .align 4 .u32 texCount;
.global .align 16 .b8 lightDir[16];
.global .align 16 .b8 lightPos[16];
.global .align 4 .u32 frameCount;
.global .align 4 .b8 top_object[4];
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 index_buffer[1];
.global .align 1 .b8 normal[1];
.global .align 1 .b8 texCoord0[1];
.global .texref tex0;
.global .align 1 .b8 output0[1];
.global .align 4 .b8 ray[36];
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 16 .b8 payload[32];
.global .align 4 .f32 t_hit;
.global .align 4 .b8 texCoord[12];
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .u32 Phong;
.global .align 4 .u32 Shadow;
.global .align 4 .f32 FresnelPower = 0f3F666666;
.global .align 4 .f32 F = 0f3D23AF32;
.global .align 8 .b8 lightSize[8] = {205, 204, 204, 62, 102, 102, 230, 62};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3fovE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7diffuseE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texCountE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8lightDirE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8lightPosE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10frameCountE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7payloadE[8] = {82, 97, 121, 0, 32, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texCoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5PhongE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6ShadowE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3fovE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename7diffuseE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8texCountE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8lightDirE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8lightPosE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10frameCountE[5] = {117, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 16 .b8 _ZN21rti_internal_typename7payloadE[17] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 82, 101, 115, 117, 108, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8texCoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename5PhongE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename6ShadowE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3fovE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7diffuseE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texCountE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8lightDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8lightPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10frameCountE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7payloadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texCoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5PhongE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6ShadowE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3fovE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7diffuseE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8texCountE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8lightDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8lightPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10frameCountE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic7payloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic8texCoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5PhongE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6ShadowE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3fovE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7diffuseE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texCountE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8lightDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8lightPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10frameCountE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7payloadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texCoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5PhongE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6ShadowE[1];

.visible .entry _Z6raygenv(

)
{
	.local .align 16 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<51>;
	.reg .b32 	%r<268>;
	.reg .b64 	%rd<20>;


	mov.u64 	%rd19, __local_depot0;
	cvta.local.u64 	%SP, %rd19;
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd13, %rd6;
	mov.u64 	%rd14, output0;
	cvta.global.u64 	%rd5, %rd14;
	mov.u32 	%r6, 2;
	mov.u32 	%r7, 16;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r6, %r7);
	// inline asm
	ld.global.v2.u32 	{%r8, %r9}, [launch_index];
	cvt.u64.u32	%rd15, %r9;
	mul.lo.s64 	%rd16, %rd15, %rd1;
	cvt.u64.u32	%rd17, %r8;
	add.s64 	%rd18, %rd16, %rd17;
	cvt.u32.u64	%r12, %rd18;
	ld.global.u32 	%r13, [frameCount];
	shl.b32 	%r14, %r13, 4;
	add.s32 	%r15, %r14, -1556008596;
	add.s32 	%r16, %r13, -1640531527;
	shr.u32 	%r17, %r13, 5;
	add.s32 	%r18, %r17, -939442524;
	xor.b32  	%r19, %r15, %r16;
	xor.b32  	%r20, %r19, %r18;
	add.s32 	%r21, %r20, %r12;
	shl.b32 	%r22, %r21, 4;
	add.s32 	%r23, %r22, -1383041155;
	add.s32 	%r24, %r21, -1640531527;
	xor.b32  	%r25, %r23, %r24;
	shr.u32 	%r26, %r21, 5;
	add.s32 	%r27, %r26, 2123724318;
	xor.b32  	%r28, %r25, %r27;
	add.s32 	%r29, %r28, %r13;
	shl.b32 	%r30, %r29, 4;
	add.s32 	%r31, %r30, -1556008596;
	add.s32 	%r32, %r29, 1013904242;
	shr.u32 	%r33, %r29, 5;
	add.s32 	%r34, %r33, -939442524;
	xor.b32  	%r35, %r31, %r32;
	xor.b32  	%r36, %r35, %r34;
	add.s32 	%r37, %r36, %r21;
	shl.b32 	%r38, %r37, 4;
	add.s32 	%r39, %r38, -1383041155;
	add.s32 	%r40, %r37, 1013904242;
	xor.b32  	%r41, %r39, %r40;
	shr.u32 	%r42, %r37, 5;
	add.s32 	%r43, %r42, 2123724318;
	xor.b32  	%r44, %r41, %r43;
	add.s32 	%r45, %r44, %r29;
	shl.b32 	%r46, %r45, 4;
	add.s32 	%r47, %r46, -1556008596;
	add.s32 	%r48, %r45, -626627285;
	shr.u32 	%r49, %r45, 5;
	add.s32 	%r50, %r49, -939442524;
	xor.b32  	%r51, %r47, %r48;
	xor.b32  	%r52, %r51, %r50;
	add.s32 	%r53, %r52, %r37;
	shl.b32 	%r54, %r53, 4;
	add.s32 	%r55, %r54, -1383041155;
	add.s32 	%r56, %r53, -626627285;
	xor.b32  	%r57, %r55, %r56;
	shr.u32 	%r58, %r53, 5;
	add.s32 	%r59, %r58, 2123724318;
	xor.b32  	%r60, %r57, %r59;
	add.s32 	%r61, %r60, %r45;
	shl.b32 	%r62, %r61, 4;
	add.s32 	%r63, %r62, -1556008596;
	add.s32 	%r64, %r61, 2027808484;
	shr.u32 	%r65, %r61, 5;
	add.s32 	%r66, %r65, -939442524;
	xor.b32  	%r67, %r63, %r64;
	xor.b32  	%r68, %r67, %r66;
	add.s32 	%r69, %r68, %r53;
	shl.b32 	%r70, %r69, 4;
	add.s32 	%r71, %r70, -1383041155;
	add.s32 	%r72, %r69, 2027808484;
	xor.b32  	%r73, %r71, %r72;
	shr.u32 	%r74, %r69, 5;
	add.s32 	%r75, %r74, 2123724318;
	xor.b32  	%r76, %r73, %r75;
	add.s32 	%r77, %r76, %r61;
	shl.b32 	%r78, %r77, 4;
	add.s32 	%r79, %r78, -1556008596;
	add.s32 	%r80, %r77, 387276957;
	shr.u32 	%r81, %r77, 5;
	add.s32 	%r82, %r81, -939442524;
	xor.b32  	%r83, %r79, %r80;
	xor.b32  	%r84, %r83, %r82;
	add.s32 	%r85, %r84, %r69;
	shl.b32 	%r86, %r85, 4;
	add.s32 	%r87, %r86, -1383041155;
	add.s32 	%r88, %r85, 387276957;
	xor.b32  	%r89, %r87, %r88;
	shr.u32 	%r90, %r85, 5;
	add.s32 	%r91, %r90, 2123724318;
	xor.b32  	%r92, %r89, %r91;
	add.s32 	%r93, %r92, %r77;
	shl.b32 	%r94, %r93, 4;
	add.s32 	%r95, %r94, -1556008596;
	add.s32 	%r96, %r93, -1253254570;
	shr.u32 	%r97, %r93, 5;
	add.s32 	%r98, %r97, -939442524;
	xor.b32  	%r99, %r95, %r96;
	xor.b32  	%r100, %r99, %r98;
	add.s32 	%r101, %r100, %r85;
	shl.b32 	%r102, %r101, 4;
	add.s32 	%r103, %r102, -1383041155;
	add.s32 	%r104, %r101, -1253254570;
	xor.b32  	%r105, %r103, %r104;
	shr.u32 	%r106, %r101, 5;
	add.s32 	%r107, %r106, 2123724318;
	xor.b32  	%r108, %r105, %r107;
	add.s32 	%r109, %r108, %r93;
	shl.b32 	%r110, %r109, 4;
	add.s32 	%r111, %r110, -1556008596;
	add.s32 	%r112, %r109, 1401181199;
	shr.u32 	%r113, %r109, 5;
	add.s32 	%r114, %r113, -939442524;
	xor.b32  	%r115, %r111, %r112;
	xor.b32  	%r116, %r115, %r114;
	add.s32 	%r117, %r116, %r101;
	shl.b32 	%r118, %r117, 4;
	add.s32 	%r119, %r118, -1383041155;
	add.s32 	%r120, %r117, 1401181199;
	xor.b32  	%r121, %r119, %r120;
	shr.u32 	%r122, %r117, 5;
	add.s32 	%r123, %r122, 2123724318;
	xor.b32  	%r124, %r121, %r123;
	add.s32 	%r125, %r124, %r109;
	shl.b32 	%r126, %r125, 4;
	add.s32 	%r127, %r126, -1556008596;
	add.s32 	%r128, %r125, -239350328;
	shr.u32 	%r129, %r125, 5;
	add.s32 	%r130, %r129, -939442524;
	xor.b32  	%r131, %r127, %r128;
	xor.b32  	%r132, %r131, %r130;
	add.s32 	%r133, %r132, %r117;
	shl.b32 	%r134, %r133, 4;
	add.s32 	%r135, %r134, -1383041155;
	add.s32 	%r136, %r133, -239350328;
	xor.b32  	%r137, %r135, %r136;
	shr.u32 	%r138, %r133, 5;
	add.s32 	%r139, %r138, 2123724318;
	xor.b32  	%r140, %r137, %r139;
	add.s32 	%r141, %r140, %r125;
	shl.b32 	%r142, %r141, 4;
	add.s32 	%r143, %r142, -1556008596;
	add.s32 	%r144, %r141, -1879881855;
	shr.u32 	%r145, %r141, 5;
	add.s32 	%r146, %r145, -939442524;
	xor.b32  	%r147, %r143, %r144;
	xor.b32  	%r148, %r147, %r146;
	add.s32 	%r149, %r148, %r133;
	shl.b32 	%r150, %r149, 4;
	add.s32 	%r151, %r150, -1383041155;
	add.s32 	%r152, %r149, -1879881855;
	xor.b32  	%r153, %r151, %r152;
	shr.u32 	%r154, %r149, 5;
	add.s32 	%r155, %r154, 2123724318;
	xor.b32  	%r156, %r153, %r155;
	add.s32 	%r157, %r156, %r141;
	shl.b32 	%r158, %r157, 4;
	add.s32 	%r159, %r158, -1556008596;
	add.s32 	%r160, %r157, 774553914;
	shr.u32 	%r161, %r157, 5;
	add.s32 	%r162, %r161, -939442524;
	xor.b32  	%r163, %r159, %r160;
	xor.b32  	%r164, %r163, %r162;
	add.s32 	%r165, %r164, %r149;
	shl.b32 	%r166, %r165, 4;
	add.s32 	%r167, %r166, -1383041155;
	add.s32 	%r168, %r165, 774553914;
	xor.b32  	%r169, %r167, %r168;
	shr.u32 	%r170, %r165, 5;
	add.s32 	%r171, %r170, 2123724318;
	xor.b32  	%r172, %r169, %r171;
	add.s32 	%r173, %r172, %r157;
	shl.b32 	%r174, %r173, 4;
	add.s32 	%r175, %r174, -1556008596;
	add.s32 	%r176, %r173, -865977613;
	shr.u32 	%r177, %r173, 5;
	add.s32 	%r178, %r177, -939442524;
	xor.b32  	%r179, %r175, %r176;
	xor.b32  	%r180, %r179, %r178;
	add.s32 	%r181, %r180, %r165;
	shl.b32 	%r182, %r181, 4;
	add.s32 	%r183, %r182, -1383041155;
	add.s32 	%r184, %r181, -865977613;
	xor.b32  	%r185, %r183, %r184;
	shr.u32 	%r186, %r181, 5;
	add.s32 	%r187, %r186, 2123724318;
	xor.b32  	%r188, %r185, %r187;
	add.s32 	%r189, %r188, %r173;
	shl.b32 	%r190, %r189, 4;
	add.s32 	%r191, %r190, -1556008596;
	add.s32 	%r192, %r189, 1788458156;
	shr.u32 	%r193, %r189, 5;
	add.s32 	%r194, %r193, -939442524;
	xor.b32  	%r195, %r191, %r192;
	xor.b32  	%r196, %r195, %r194;
	add.s32 	%r197, %r196, %r181;
	shl.b32 	%r198, %r197, 4;
	add.s32 	%r199, %r198, -1383041155;
	add.s32 	%r200, %r197, 1788458156;
	xor.b32  	%r201, %r199, %r200;
	shr.u32 	%r202, %r197, 5;
	add.s32 	%r203, %r202, 2123724318;
	xor.b32  	%r204, %r201, %r203;
	add.s32 	%r205, %r204, %r189;
	shl.b32 	%r206, %r205, 4;
	add.s32 	%r207, %r206, -1556008596;
	add.s32 	%r208, %r205, 147926629;
	shr.u32 	%r209, %r205, 5;
	add.s32 	%r210, %r209, -939442524;
	xor.b32  	%r211, %r207, %r208;
	xor.b32  	%r212, %r211, %r210;
	add.s32 	%r213, %r212, %r197;
	shl.b32 	%r214, %r213, 4;
	add.s32 	%r215, %r214, -1383041155;
	add.s32 	%r216, %r213, 147926629;
	xor.b32  	%r217, %r215, %r216;
	shr.u32 	%r218, %r213, 5;
	add.s32 	%r219, %r218, 2123724318;
	xor.b32  	%r220, %r217, %r219;
	add.s32 	%r221, %r220, %r205;
	shl.b32 	%r222, %r221, 4;
	add.s32 	%r223, %r222, -1556008596;
	add.s32 	%r224, %r221, -1492604898;
	shr.u32 	%r225, %r221, 5;
	add.s32 	%r226, %r225, -939442524;
	xor.b32  	%r227, %r223, %r224;
	xor.b32  	%r228, %r227, %r226;
	add.s32 	%r229, %r228, %r213;
	shl.b32 	%r230, %r229, 4;
	add.s32 	%r231, %r230, -1383041155;
	add.s32 	%r232, %r229, -1492604898;
	xor.b32  	%r233, %r231, %r232;
	shr.u32 	%r234, %r229, 5;
	add.s32 	%r235, %r234, 2123724318;
	xor.b32  	%r236, %r233, %r235;
	add.s32 	%r237, %r236, %r221;
	shl.b32 	%r238, %r237, 4;
	add.s32 	%r239, %r238, -1556008596;
	add.s32 	%r240, %r237, 1161830871;
	shr.u32 	%r241, %r237, 5;
	add.s32 	%r242, %r241, -939442524;
	xor.b32  	%r243, %r239, %r240;
	xor.b32  	%r244, %r243, %r242;
	add.s32 	%r245, %r244, %r229;
	shl.b32 	%r246, %r245, 4;
	add.s32 	%r247, %r246, -1383041155;
	add.s32 	%r248, %r245, 1161830871;
	xor.b32  	%r249, %r247, %r248;
	shr.u32 	%r250, %r245, 5;
	add.s32 	%r251, %r250, 2123724318;
	xor.b32  	%r252, %r249, %r251;
	add.s32 	%r253, %r252, %r237;
	shl.b32 	%r254, %r253, 4;
	add.s32 	%r255, %r254, -1556008596;
	add.s32 	%r256, %r253, -478700656;
	shr.u32 	%r257, %r253, 5;
	add.s32 	%r258, %r257, -939442524;
	xor.b32  	%r259, %r255, %r256;
	xor.b32  	%r260, %r259, %r258;
	cvt.rn.f32.u32	%f9, %r8;
	cvt.rn.f32.u32	%f10, %r9;
	ld.global.v2.u32 	{%r261, %r262}, [launch_dim];
	cvt.rn.f32.u32	%f11, %r261;
	cvt.rn.f32.u32	%f12, %r262;
	div.approx.ftz.f32 	%f13, %f9, %f11;
	div.approx.ftz.f32 	%f14, %f10, %f12;
	fma.rn.ftz.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.global.f32 	%f3, [eye+8];
	ld.global.f32 	%f2, [eye+4];
	ld.global.f32 	%f1, [eye];
	ld.global.f32 	%f17, [U];
	mul.ftz.f32 	%f18, %f15, %f17;
	ld.global.f32 	%f19, [U+4];
	mul.ftz.f32 	%f20, %f15, %f19;
	ld.global.f32 	%f21, [U+8];
	mul.ftz.f32 	%f22, %f15, %f21;
	ld.global.f32 	%f23, [fov];
	ld.global.f32 	%f24, [V];
	mul.ftz.f32 	%f25, %f16, %f24;
	ld.global.f32 	%f26, [V+4];
	mul.ftz.f32 	%f27, %f16, %f26;
	ld.global.f32 	%f28, [V+8];
	mul.ftz.f32 	%f29, %f16, %f28;
	mul.ftz.f32 	%f30, %f25, %f23;
	mul.ftz.f32 	%f31, %f27, %f23;
	mul.ftz.f32 	%f32, %f29, %f23;
	fma.rn.ftz.f32 	%f33, %f18, %f23, %f30;
	fma.rn.ftz.f32 	%f34, %f20, %f23, %f31;
	fma.rn.ftz.f32 	%f35, %f22, %f23, %f32;
	ld.global.f32 	%f36, [W];
	add.ftz.f32 	%f37, %f36, %f33;
	ld.global.f32 	%f38, [W+4];
	add.ftz.f32 	%f39, %f34, %f38;
	ld.global.f32 	%f40, [W+8];
	add.ftz.f32 	%f41, %f35, %f40;
	mul.ftz.f32 	%f42, %f39, %f39;
	fma.rn.ftz.f32 	%f43, %f37, %f37, %f42;
	fma.rn.ftz.f32 	%f44, %f41, %f41, %f43;
	rsqrt.approx.ftz.f32 	%f45, %f44;
	mul.ftz.f32 	%f4, %f37, %f45;
	mul.ftz.f32 	%f5, %f39, %f45;
	mul.ftz.f32 	%f6, %f41, %f45;
	ld.global.u32 	%r4, [Phong];
	mov.f32 	%f46, 0f3F800000;
	st.local.v4.f32 	[%rd13], {%f46, %f46, %f46, %f46};
	add.s32 	%r265, %r260, %r245;
	mov.u32 	%r266, 1;
	st.local.v2.u32 	[%rd13+16], {%r266, %r265};
	mov.u32 	%r267, 0;
	st.local.u32 	[%rd13+24], %r267;
	ld.global.u32 	%r3, [top_object];
	mov.f32 	%f7, 0f2D2FEBFF;
	mov.f32 	%f8, 0f6C4ECB8F;
	mov.u32 	%r5, 32;
	// inline asm
	call _rt_trace_64, (%r3, %f1, %f2, %f3, %f4, %f5, %f6, %r4, %f7, %f8, %rd6, %r5);
	// inline asm
	ld.global.u32 	%rd9, [launch_index];
	ld.global.u32 	%rd10, [launch_index+4];
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r6, %r7, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.local.f32 	%f47, [%rd13];
	ld.local.f32 	%f48, [%rd13+4];
	ld.local.f32 	%f49, [%rd13+8];
	ld.local.f32 	%f50, [%rd13+12];
	st.f32 	[%rd7+12], %f50;
	st.f32 	[%rd7+8], %f49;
	st.f32 	[%rd7+4], %f48;
	st.f32 	[%rd7], %f47;
	ret;
}

	// .globl	_Z9raygen_msv
.visible .entry _Z9raygen_msv(

)
{
	.local .align 16 .b8 	__local_depot1[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<247>;
	.reg .b32 	%r<292>;
	.reg .b64 	%rd<23>;


	mov.u64 	%rd22, __local_depot1;
	cvta.local.u64 	%SP, %rd22;
	add.u64 	%rd9, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd9;
	mov.u64 	%rd17, output0;
	cvta.global.u64 	%rd5, %rd17;
	mov.u32 	%r15, 2;
	mov.u32 	%r16, 16;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r15, %r16);
	// inline asm
	cvt.rn.f32.u64	%f33, %rd1;
	cvt.rn.f32.u64	%f34, %rd2;
	rcp.approx.ftz.f32 	%f35, %f33;
	rcp.approx.ftz.f32 	%f36, %f34;
	add.ftz.f32 	%f37, %f35, %f35;
	add.ftz.f32 	%f38, %f36, %f36;
	ld.global.v2.u32 	{%r17, %r18}, [launch_index];
	cvt.rn.f32.u32	%f39, %r17;
	cvt.rn.f32.u32	%f40, %r18;
	fma.rn.ftz.f32 	%f41, %f37, %f39, 0fBF800000;
	fma.rn.ftz.f32 	%f42, %f38, %f40, 0fBF800000;
	mul.ftz.f32 	%f43, %f37, 0f3F000000;
	mul.ftz.f32 	%f44, %f38, 0f3F000000;
	cvt.u64.u32	%rd18, %r18;
	mul.lo.s64 	%rd19, %rd18, %rd1;
	cvt.u64.u32	%rd20, %r17;
	add.s64 	%rd21, %rd19, %rd20;
	cvt.u32.u64	%r21, %rd21;
	ld.global.u32 	%r22, [frameCount];
	shl.b32 	%r23, %r22, 4;
	add.s32 	%r24, %r23, -1556008596;
	add.s32 	%r25, %r22, -1640531527;
	shr.u32 	%r26, %r22, 5;
	add.s32 	%r27, %r26, -939442524;
	xor.b32  	%r28, %r24, %r25;
	xor.b32  	%r29, %r28, %r27;
	add.s32 	%r30, %r29, %r21;
	shl.b32 	%r31, %r30, 4;
	add.s32 	%r32, %r31, -1383041155;
	add.s32 	%r33, %r30, -1640531527;
	xor.b32  	%r34, %r32, %r33;
	shr.u32 	%r35, %r30, 5;
	add.s32 	%r36, %r35, 2123724318;
	xor.b32  	%r37, %r34, %r36;
	add.s32 	%r38, %r37, %r22;
	shl.b32 	%r39, %r38, 4;
	add.s32 	%r40, %r39, -1556008596;
	add.s32 	%r41, %r38, 1013904242;
	shr.u32 	%r42, %r38, 5;
	add.s32 	%r43, %r42, -939442524;
	xor.b32  	%r44, %r40, %r41;
	xor.b32  	%r45, %r44, %r43;
	add.s32 	%r46, %r45, %r30;
	shl.b32 	%r47, %r46, 4;
	add.s32 	%r48, %r47, -1383041155;
	add.s32 	%r49, %r46, 1013904242;
	xor.b32  	%r50, %r48, %r49;
	shr.u32 	%r51, %r46, 5;
	add.s32 	%r52, %r51, 2123724318;
	xor.b32  	%r53, %r50, %r52;
	add.s32 	%r54, %r53, %r38;
	shl.b32 	%r55, %r54, 4;
	add.s32 	%r56, %r55, -1556008596;
	add.s32 	%r57, %r54, -626627285;
	shr.u32 	%r58, %r54, 5;
	add.s32 	%r59, %r58, -939442524;
	xor.b32  	%r60, %r56, %r57;
	xor.b32  	%r61, %r60, %r59;
	add.s32 	%r62, %r61, %r46;
	shl.b32 	%r63, %r62, 4;
	add.s32 	%r64, %r63, -1383041155;
	add.s32 	%r65, %r62, -626627285;
	xor.b32  	%r66, %r64, %r65;
	shr.u32 	%r67, %r62, 5;
	add.s32 	%r68, %r67, 2123724318;
	xor.b32  	%r69, %r66, %r68;
	add.s32 	%r70, %r69, %r54;
	shl.b32 	%r71, %r70, 4;
	add.s32 	%r72, %r71, -1556008596;
	add.s32 	%r73, %r70, 2027808484;
	shr.u32 	%r74, %r70, 5;
	add.s32 	%r75, %r74, -939442524;
	xor.b32  	%r76, %r72, %r73;
	xor.b32  	%r77, %r76, %r75;
	add.s32 	%r78, %r77, %r62;
	shl.b32 	%r79, %r78, 4;
	add.s32 	%r80, %r79, -1383041155;
	add.s32 	%r81, %r78, 2027808484;
	xor.b32  	%r82, %r80, %r81;
	shr.u32 	%r83, %r78, 5;
	add.s32 	%r84, %r83, 2123724318;
	xor.b32  	%r85, %r82, %r84;
	add.s32 	%r86, %r85, %r70;
	shl.b32 	%r87, %r86, 4;
	add.s32 	%r88, %r87, -1556008596;
	add.s32 	%r89, %r86, 387276957;
	shr.u32 	%r90, %r86, 5;
	add.s32 	%r91, %r90, -939442524;
	xor.b32  	%r92, %r88, %r89;
	xor.b32  	%r93, %r92, %r91;
	add.s32 	%r94, %r93, %r78;
	shl.b32 	%r95, %r94, 4;
	add.s32 	%r96, %r95, -1383041155;
	add.s32 	%r97, %r94, 387276957;
	xor.b32  	%r98, %r96, %r97;
	shr.u32 	%r99, %r94, 5;
	add.s32 	%r100, %r99, 2123724318;
	xor.b32  	%r101, %r98, %r100;
	add.s32 	%r102, %r101, %r86;
	shl.b32 	%r103, %r102, 4;
	add.s32 	%r104, %r103, -1556008596;
	add.s32 	%r105, %r102, -1253254570;
	shr.u32 	%r106, %r102, 5;
	add.s32 	%r107, %r106, -939442524;
	xor.b32  	%r108, %r104, %r105;
	xor.b32  	%r109, %r108, %r107;
	add.s32 	%r110, %r109, %r94;
	shl.b32 	%r111, %r110, 4;
	add.s32 	%r112, %r111, -1383041155;
	add.s32 	%r113, %r110, -1253254570;
	xor.b32  	%r114, %r112, %r113;
	shr.u32 	%r115, %r110, 5;
	add.s32 	%r116, %r115, 2123724318;
	xor.b32  	%r117, %r114, %r116;
	add.s32 	%r118, %r117, %r102;
	shl.b32 	%r119, %r118, 4;
	add.s32 	%r120, %r119, -1556008596;
	add.s32 	%r121, %r118, 1401181199;
	shr.u32 	%r122, %r118, 5;
	add.s32 	%r123, %r122, -939442524;
	xor.b32  	%r124, %r120, %r121;
	xor.b32  	%r125, %r124, %r123;
	add.s32 	%r126, %r125, %r110;
	shl.b32 	%r127, %r126, 4;
	add.s32 	%r128, %r127, -1383041155;
	add.s32 	%r129, %r126, 1401181199;
	xor.b32  	%r130, %r128, %r129;
	shr.u32 	%r131, %r126, 5;
	add.s32 	%r132, %r131, 2123724318;
	xor.b32  	%r133, %r130, %r132;
	add.s32 	%r134, %r133, %r118;
	shl.b32 	%r135, %r134, 4;
	add.s32 	%r136, %r135, -1556008596;
	add.s32 	%r137, %r134, -239350328;
	shr.u32 	%r138, %r134, 5;
	add.s32 	%r139, %r138, -939442524;
	xor.b32  	%r140, %r136, %r137;
	xor.b32  	%r141, %r140, %r139;
	add.s32 	%r142, %r141, %r126;
	shl.b32 	%r143, %r142, 4;
	add.s32 	%r144, %r143, -1383041155;
	add.s32 	%r145, %r142, -239350328;
	xor.b32  	%r146, %r144, %r145;
	shr.u32 	%r147, %r142, 5;
	add.s32 	%r148, %r147, 2123724318;
	xor.b32  	%r149, %r146, %r148;
	add.s32 	%r150, %r149, %r134;
	shl.b32 	%r151, %r150, 4;
	add.s32 	%r152, %r151, -1556008596;
	add.s32 	%r153, %r150, -1879881855;
	shr.u32 	%r154, %r150, 5;
	add.s32 	%r155, %r154, -939442524;
	xor.b32  	%r156, %r152, %r153;
	xor.b32  	%r157, %r156, %r155;
	add.s32 	%r158, %r157, %r142;
	shl.b32 	%r159, %r158, 4;
	add.s32 	%r160, %r159, -1383041155;
	add.s32 	%r161, %r158, -1879881855;
	xor.b32  	%r162, %r160, %r161;
	shr.u32 	%r163, %r158, 5;
	add.s32 	%r164, %r163, 2123724318;
	xor.b32  	%r165, %r162, %r164;
	add.s32 	%r166, %r165, %r150;
	shl.b32 	%r167, %r166, 4;
	add.s32 	%r168, %r167, -1556008596;
	add.s32 	%r169, %r166, 774553914;
	shr.u32 	%r170, %r166, 5;
	add.s32 	%r171, %r170, -939442524;
	xor.b32  	%r172, %r168, %r169;
	xor.b32  	%r173, %r172, %r171;
	add.s32 	%r174, %r173, %r158;
	shl.b32 	%r175, %r174, 4;
	add.s32 	%r176, %r175, -1383041155;
	add.s32 	%r177, %r174, 774553914;
	xor.b32  	%r178, %r176, %r177;
	shr.u32 	%r179, %r174, 5;
	add.s32 	%r180, %r179, 2123724318;
	xor.b32  	%r181, %r178, %r180;
	add.s32 	%r182, %r181, %r166;
	shl.b32 	%r183, %r182, 4;
	add.s32 	%r184, %r183, -1556008596;
	add.s32 	%r185, %r182, -865977613;
	shr.u32 	%r186, %r182, 5;
	add.s32 	%r187, %r186, -939442524;
	xor.b32  	%r188, %r184, %r185;
	xor.b32  	%r189, %r188, %r187;
	add.s32 	%r190, %r189, %r174;
	shl.b32 	%r191, %r190, 4;
	add.s32 	%r192, %r191, -1383041155;
	add.s32 	%r193, %r190, -865977613;
	xor.b32  	%r194, %r192, %r193;
	shr.u32 	%r195, %r190, 5;
	add.s32 	%r196, %r195, 2123724318;
	xor.b32  	%r197, %r194, %r196;
	add.s32 	%r198, %r197, %r182;
	shl.b32 	%r199, %r198, 4;
	add.s32 	%r200, %r199, -1556008596;
	add.s32 	%r201, %r198, 1788458156;
	shr.u32 	%r202, %r198, 5;
	add.s32 	%r203, %r202, -939442524;
	xor.b32  	%r204, %r200, %r201;
	xor.b32  	%r205, %r204, %r203;
	add.s32 	%r206, %r205, %r190;
	shl.b32 	%r207, %r206, 4;
	add.s32 	%r208, %r207, -1383041155;
	add.s32 	%r209, %r206, 1788458156;
	xor.b32  	%r210, %r208, %r209;
	shr.u32 	%r211, %r206, 5;
	add.s32 	%r212, %r211, 2123724318;
	xor.b32  	%r213, %r210, %r212;
	add.s32 	%r214, %r213, %r198;
	shl.b32 	%r215, %r214, 4;
	add.s32 	%r216, %r215, -1556008596;
	add.s32 	%r217, %r214, 147926629;
	shr.u32 	%r218, %r214, 5;
	add.s32 	%r219, %r218, -939442524;
	xor.b32  	%r220, %r216, %r217;
	xor.b32  	%r221, %r220, %r219;
	add.s32 	%r222, %r221, %r206;
	shl.b32 	%r223, %r222, 4;
	add.s32 	%r224, %r223, -1383041155;
	add.s32 	%r225, %r222, 147926629;
	xor.b32  	%r226, %r224, %r225;
	shr.u32 	%r227, %r222, 5;
	add.s32 	%r228, %r227, 2123724318;
	xor.b32  	%r229, %r226, %r228;
	add.s32 	%r230, %r229, %r214;
	shl.b32 	%r231, %r230, 4;
	add.s32 	%r232, %r231, -1556008596;
	add.s32 	%r233, %r230, -1492604898;
	shr.u32 	%r234, %r230, 5;
	add.s32 	%r235, %r234, -939442524;
	xor.b32  	%r236, %r232, %r233;
	xor.b32  	%r237, %r236, %r235;
	add.s32 	%r238, %r237, %r222;
	shl.b32 	%r239, %r238, 4;
	add.s32 	%r240, %r239, -1383041155;
	add.s32 	%r241, %r238, -1492604898;
	xor.b32  	%r242, %r240, %r241;
	shr.u32 	%r243, %r238, 5;
	add.s32 	%r244, %r243, 2123724318;
	xor.b32  	%r245, %r242, %r244;
	add.s32 	%r246, %r245, %r230;
	shl.b32 	%r247, %r246, 4;
	add.s32 	%r248, %r247, -1556008596;
	add.s32 	%r249, %r246, 1161830871;
	shr.u32 	%r250, %r246, 5;
	add.s32 	%r251, %r250, -939442524;
	xor.b32  	%r252, %r248, %r249;
	xor.b32  	%r253, %r252, %r251;
	add.s32 	%r254, %r253, %r238;
	shl.b32 	%r255, %r254, 4;
	add.s32 	%r256, %r255, -1383041155;
	add.s32 	%r257, %r254, 1161830871;
	xor.b32  	%r258, %r256, %r257;
	shr.u32 	%r259, %r254, 5;
	add.s32 	%r260, %r259, 2123724318;
	xor.b32  	%r261, %r258, %r260;
	add.s32 	%r262, %r261, %r246;
	shl.b32 	%r263, %r262, 4;
	add.s32 	%r264, %r263, -1556008596;
	add.s32 	%r265, %r262, -478700656;
	shr.u32 	%r266, %r262, 5;
	add.s32 	%r267, %r266, -939442524;
	xor.b32  	%r268, %r264, %r265;
	xor.b32  	%r269, %r268, %r267;
	add.s32 	%r270, %r269, %r254;
	mad.lo.s32 	%r271, %r270, 1664525, 1013904223;
	and.b32  	%r272, %r271, 16777215;
	cvt.rn.f32.u32	%f45, %r272;
	mov.f32 	%f46, 0f4B800000;
	div.approx.ftz.f32 	%f47, %f45, %f46;
	add.ftz.f32 	%f48, %f47, 0f3F800000;
	mad.lo.s32 	%r273, %r271, 1664525, 1013904223;
	and.b32  	%r274, %r273, 16777215;
	cvt.rn.f32.u32	%f49, %r274;
	div.approx.ftz.f32 	%f50, %f49, %f46;
	add.ftz.f32 	%f51, %f50, 0f3F800000;
	fma.rn.ftz.f32 	%f52, %f43, %f48, %f41;
	fma.rn.ftz.f32 	%f53, %f44, %f51, %f42;
	ld.global.f32 	%f3, [eye+8];
	ld.global.f32 	%f2, [eye+4];
	ld.global.f32 	%f1, [eye];
	ld.global.f32 	%f54, [U];
	mul.ftz.f32 	%f55, %f54, %f52;
	ld.global.f32 	%f56, [U+4];
	mul.ftz.f32 	%f57, %f52, %f56;
	ld.global.f32 	%f58, [U+8];
	mul.ftz.f32 	%f59, %f52, %f58;
	ld.global.f32 	%f60, [fov];
	ld.global.f32 	%f61, [V];
	mul.ftz.f32 	%f62, %f53, %f61;
	ld.global.f32 	%f63, [V+4];
	mul.ftz.f32 	%f64, %f53, %f63;
	ld.global.f32 	%f65, [V+8];
	mul.ftz.f32 	%f66, %f53, %f65;
	mul.ftz.f32 	%f67, %f62, %f60;
	mul.ftz.f32 	%f68, %f64, %f60;
	mul.ftz.f32 	%f69, %f66, %f60;
	fma.rn.ftz.f32 	%f70, %f55, %f60, %f67;
	fma.rn.ftz.f32 	%f71, %f57, %f60, %f68;
	fma.rn.ftz.f32 	%f72, %f59, %f60, %f69;
	ld.global.f32 	%f73, [W];
	add.ftz.f32 	%f74, %f73, %f70;
	ld.global.f32 	%f75, [W+4];
	add.ftz.f32 	%f76, %f71, %f75;
	ld.global.f32 	%f77, [W+8];
	add.ftz.f32 	%f78, %f72, %f77;
	mul.ftz.f32 	%f79, %f76, %f76;
	fma.rn.ftz.f32 	%f80, %f74, %f74, %f79;
	fma.rn.ftz.f32 	%f81, %f78, %f78, %f80;
	rsqrt.approx.ftz.f32 	%f82, %f81;
	mul.ftz.f32 	%f4, %f74, %f82;
	mul.ftz.f32 	%f5, %f76, %f82;
	mul.ftz.f32 	%f6, %f78, %f82;
	ld.global.u32 	%r4, [Phong];
	mov.f32 	%f83, 0f3F800000;
	st.local.v4.f32 	[%rd16], {%f83, %f83, %f83, %f83};
	mov.u32 	%r275, 0;
	st.local.v2.u32 	[%rd16+16], {%r275, %r273};
	ld.global.u32 	%r3, [top_object];
	mov.f32 	%f31, 0f3089705F;
	mov.f32 	%f32, 0f6C4ECB8F;
	mov.u32 	%r14, 32;
	// inline asm
	call _rt_trace_64, (%r3, %f1, %f2, %f3, %f4, %f5, %f6, %r4, %f31, %f32, %rd9, %r14);
	// inline asm
	ld.local.v4.f32 	{%f84, %f85, %f86, %f87}, [%rd16];
	add.ftz.f32 	%f89, %f84, 0f00000000;
	add.ftz.f32 	%f91, %f85, 0f00000000;
	add.ftz.f32 	%f93, %f86, 0f00000000;
	add.ftz.f32 	%f95, %f87, 0f00000000;
	mad.lo.s32 	%r276, %r273, 1664525, 1013904223;
	and.b32  	%r277, %r276, 16777215;
	cvt.rn.f32.u32	%f96, %r277;
	div.approx.ftz.f32 	%f97, %f96, %f46;
	add.ftz.f32 	%f98, %f97, 0f3F800000;
	mad.lo.s32 	%r278, %r276, 1664525, 1013904223;
	and.b32  	%r279, %r278, 16777215;
	cvt.rn.f32.u32	%f99, %r279;
	div.approx.ftz.f32 	%f100, %f99, %f46;
	add.ftz.f32 	%f101, %f100, 0f40000000;
	fma.rn.ftz.f32 	%f102, %f43, %f98, %f41;
	fma.rn.ftz.f32 	%f103, %f44, %f101, %f42;
	ld.global.f32 	%f11, [eye+8];
	ld.global.f32 	%f10, [eye+4];
	ld.global.f32 	%f9, [eye];
	ld.global.f32 	%f104, [U];
	mul.ftz.f32 	%f105, %f104, %f102;
	ld.global.f32 	%f106, [U+4];
	mul.ftz.f32 	%f107, %f102, %f106;
	ld.global.f32 	%f108, [U+8];
	mul.ftz.f32 	%f109, %f102, %f108;
	ld.global.f32 	%f110, [fov];
	ld.global.f32 	%f111, [V];
	mul.ftz.f32 	%f112, %f103, %f111;
	ld.global.f32 	%f113, [V+4];
	mul.ftz.f32 	%f114, %f103, %f113;
	ld.global.f32 	%f115, [V+8];
	mul.ftz.f32 	%f116, %f103, %f115;
	mul.ftz.f32 	%f117, %f112, %f110;
	mul.ftz.f32 	%f118, %f114, %f110;
	mul.ftz.f32 	%f119, %f116, %f110;
	fma.rn.ftz.f32 	%f120, %f105, %f110, %f117;
	fma.rn.ftz.f32 	%f121, %f107, %f110, %f118;
	fma.rn.ftz.f32 	%f122, %f109, %f110, %f119;
	ld.global.f32 	%f123, [W];
	add.ftz.f32 	%f124, %f123, %f120;
	ld.global.f32 	%f125, [W+4];
	add.ftz.f32 	%f126, %f121, %f125;
	ld.global.f32 	%f127, [W+8];
	add.ftz.f32 	%f128, %f122, %f127;
	mul.ftz.f32 	%f129, %f126, %f126;
	fma.rn.ftz.f32 	%f130, %f124, %f124, %f129;
	fma.rn.ftz.f32 	%f131, %f128, %f128, %f130;
	rsqrt.approx.ftz.f32 	%f132, %f131;
	mul.ftz.f32 	%f12, %f124, %f132;
	mul.ftz.f32 	%f13, %f126, %f132;
	mul.ftz.f32 	%f14, %f128, %f132;
	ld.global.u32 	%r7, [Phong];
	st.local.v4.f32 	[%rd16], {%f83, %f83, %f83, %f83};
	st.local.v2.u32 	[%rd16+16], {%r275, %r278};
	ld.global.u32 	%r6, [top_object];
	// inline asm
	call _rt_trace_64, (%r6, %f9, %f10, %f11, %f12, %f13, %f14, %r7, %f31, %f32, %rd9, %r14);
	// inline asm
	ld.local.v4.f32 	{%f133, %f134, %f135, %f136}, [%rd16];
	add.ftz.f32 	%f138, %f89, %f133;
	add.ftz.f32 	%f140, %f91, %f134;
	add.ftz.f32 	%f142, %f93, %f135;
	add.ftz.f32 	%f144, %f95, %f136;
	mad.lo.s32 	%r280, %r278, 1664525, 1013904223;
	and.b32  	%r281, %r280, 16777215;
	cvt.rn.f32.u32	%f145, %r281;
	div.approx.ftz.f32 	%f146, %f145, %f46;
	add.ftz.f32 	%f147, %f146, 0f40000000;
	mad.lo.s32 	%r282, %r280, 1664525, 1013904223;
	and.b32  	%r283, %r282, 16777215;
	cvt.rn.f32.u32	%f148, %r283;
	div.approx.ftz.f32 	%f149, %f148, %f46;
	add.ftz.f32 	%f150, %f149, 0f3F800000;
	fma.rn.ftz.f32 	%f151, %f43, %f147, %f41;
	fma.rn.ftz.f32 	%f152, %f44, %f150, %f42;
	ld.global.f32 	%f19, [eye+8];
	ld.global.f32 	%f18, [eye+4];
	ld.global.f32 	%f17, [eye];
	ld.global.f32 	%f153, [U];
	mul.ftz.f32 	%f154, %f153, %f151;
	ld.global.f32 	%f155, [U+4];
	mul.ftz.f32 	%f156, %f151, %f155;
	ld.global.f32 	%f157, [U+8];
	mul.ftz.f32 	%f158, %f151, %f157;
	ld.global.f32 	%f159, [fov];
	ld.global.f32 	%f160, [V];
	mul.ftz.f32 	%f161, %f152, %f160;
	ld.global.f32 	%f162, [V+4];
	mul.ftz.f32 	%f163, %f152, %f162;
	ld.global.f32 	%f164, [V+8];
	mul.ftz.f32 	%f165, %f152, %f164;
	mul.ftz.f32 	%f166, %f161, %f159;
	mul.ftz.f32 	%f167, %f163, %f159;
	mul.ftz.f32 	%f168, %f165, %f159;
	fma.rn.ftz.f32 	%f169, %f154, %f159, %f166;
	fma.rn.ftz.f32 	%f170, %f156, %f159, %f167;
	fma.rn.ftz.f32 	%f171, %f158, %f159, %f168;
	ld.global.f32 	%f172, [W];
	add.ftz.f32 	%f173, %f172, %f169;
	ld.global.f32 	%f174, [W+4];
	add.ftz.f32 	%f175, %f170, %f174;
	ld.global.f32 	%f176, [W+8];
	add.ftz.f32 	%f177, %f171, %f176;
	mul.ftz.f32 	%f178, %f175, %f175;
	fma.rn.ftz.f32 	%f179, %f173, %f173, %f178;
	fma.rn.ftz.f32 	%f180, %f177, %f177, %f179;
	rsqrt.approx.ftz.f32 	%f181, %f180;
	mul.ftz.f32 	%f20, %f173, %f181;
	mul.ftz.f32 	%f21, %f175, %f181;
	mul.ftz.f32 	%f22, %f177, %f181;
	ld.global.u32 	%r10, [Phong];
	st.local.v4.f32 	[%rd16], {%f83, %f83, %f83, %f83};
	st.local.v2.u32 	[%rd16+16], {%r275, %r282};
	ld.global.u32 	%r9, [top_object];
	// inline asm
	call _rt_trace_64, (%r9, %f17, %f18, %f19, %f20, %f21, %f22, %r10, %f31, %f32, %rd9, %r14);
	// inline asm
	ld.local.v4.f32 	{%f182, %f183, %f184, %f185}, [%rd16];
	add.ftz.f32 	%f187, %f138, %f182;
	add.ftz.f32 	%f189, %f140, %f183;
	add.ftz.f32 	%f191, %f142, %f184;
	add.ftz.f32 	%f193, %f144, %f185;
	mad.lo.s32 	%r284, %r282, 1664525, 1013904223;
	and.b32  	%r285, %r284, 16777215;
	cvt.rn.f32.u32	%f194, %r285;
	div.approx.ftz.f32 	%f195, %f194, %f46;
	add.ftz.f32 	%f196, %f195, 0f40000000;
	mad.lo.s32 	%r286, %r284, 1664525, 1013904223;
	and.b32  	%r287, %r286, 16777215;
	cvt.rn.f32.u32	%f197, %r287;
	div.approx.ftz.f32 	%f198, %f197, %f46;
	add.ftz.f32 	%f199, %f198, 0f40000000;
	fma.rn.ftz.f32 	%f200, %f43, %f196, %f41;
	fma.rn.ftz.f32 	%f201, %f44, %f199, %f42;
	ld.global.f32 	%f27, [eye+8];
	ld.global.f32 	%f26, [eye+4];
	ld.global.f32 	%f25, [eye];
	ld.global.f32 	%f202, [U];
	mul.ftz.f32 	%f203, %f202, %f200;
	ld.global.f32 	%f204, [U+4];
	mul.ftz.f32 	%f205, %f200, %f204;
	ld.global.f32 	%f206, [U+8];
	mul.ftz.f32 	%f207, %f200, %f206;
	ld.global.f32 	%f208, [fov];
	ld.global.f32 	%f209, [V];
	mul.ftz.f32 	%f210, %f201, %f209;
	ld.global.f32 	%f211, [V+4];
	mul.ftz.f32 	%f212, %f201, %f211;
	ld.global.f32 	%f213, [V+8];
	mul.ftz.f32 	%f214, %f201, %f213;
	mul.ftz.f32 	%f215, %f210, %f208;
	mul.ftz.f32 	%f216, %f212, %f208;
	mul.ftz.f32 	%f217, %f214, %f208;
	fma.rn.ftz.f32 	%f218, %f203, %f208, %f215;
	fma.rn.ftz.f32 	%f219, %f205, %f208, %f216;
	fma.rn.ftz.f32 	%f220, %f207, %f208, %f217;
	ld.global.f32 	%f221, [W];
	add.ftz.f32 	%f222, %f221, %f218;
	ld.global.f32 	%f223, [W+4];
	add.ftz.f32 	%f224, %f219, %f223;
	ld.global.f32 	%f225, [W+8];
	add.ftz.f32 	%f226, %f220, %f225;
	mul.ftz.f32 	%f227, %f224, %f224;
	fma.rn.ftz.f32 	%f228, %f222, %f222, %f227;
	fma.rn.ftz.f32 	%f229, %f226, %f226, %f228;
	rsqrt.approx.ftz.f32 	%f230, %f229;
	mul.ftz.f32 	%f28, %f222, %f230;
	mul.ftz.f32 	%f29, %f224, %f230;
	mul.ftz.f32 	%f30, %f226, %f230;
	ld.global.u32 	%r13, [Phong];
	st.local.v4.f32 	[%rd16], {%f83, %f83, %f83, %f83};
	st.local.v2.u32 	[%rd16+16], {%r275, %r286};
	ld.global.u32 	%r12, [top_object];
	// inline asm
	call _rt_trace_64, (%r12, %f25, %f26, %f27, %f28, %f29, %f30, %r13, %f31, %f32, %rd9, %r14);
	// inline asm
	ld.local.v4.f32 	{%f231, %f232, %f233, %f234}, [%rd16];
	add.ftz.f32 	%f236, %f187, %f231;
	add.ftz.f32 	%f238, %f189, %f232;
	add.ftz.f32 	%f240, %f191, %f233;
	add.ftz.f32 	%f242, %f193, %f234;
	ld.global.v2.u32 	{%r288, %r289}, [launch_index];
	cvt.u64.u32	%rd12, %r288;
	cvt.u64.u32	%rd13, %r289;
	mov.u64 	%rd15, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd5, %r15, %r16, %rd12, %rd13, %rd15, %rd15);
	// inline asm
	mul.ftz.f32 	%f243, %f242, 0f3E800000;
	mul.ftz.f32 	%f244, %f240, 0f3E800000;
	mul.ftz.f32 	%f245, %f238, 0f3E800000;
	mul.ftz.f32 	%f246, %f236, 0f3E800000;
	st.v4.f32 	[%rd10], {%f246, %f245, %f244, %f243};
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.reg .f32 	%f<3>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.global.v2.u32 	{%r3, %r4}, [launch_index];
	cvt.u64.u32	%rd3, %r3;
	cvt.u64.u32	%rd4, %r4;
	mov.u64 	%rd7, output0;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 16;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	mov.f32 	%f1, 0f00000000;
	mov.f32 	%f2, 0f3F800000;
	st.v4.f32 	[%rd1], {%f2, %f1, %f1, %f2};
	ret;
}

	// .globl	_Z9tracePathv
.visible .entry _Z9tracePathv(

)
{
	.local .align 16 .b8 	__local_depot3[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .f32 	%f<136>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<6>;


	mov.u64 	%rd5, __local_depot3;
	cvta.local.u64 	%SP, %rd5;
	ld.global.u32 	%r1, [payload+16];
	setp.gt.s32	%p1, %r1, 3;
	@%p1 bra 	BB3_6;

	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd1;
	ld.global.f32 	%f26, [shading_normal];
	ld.global.f32 	%f27, [shading_normal+4];
	ld.global.f32 	%f28, [shading_normal+8];
	mov.f32 	%f132, 0f00000000;
	mov.u32 	%r2, 7937;
	// inline asm
	call (%f22, %f23, %f24, %f25), _rt_transform_tuple, (%r2, %f26, %f27, %f28, %f132);
	// inline asm
	mul.ftz.f32 	%f34, %f23, %f23;
	fma.rn.ftz.f32 	%f35, %f22, %f22, %f34;
	fma.rn.ftz.f32 	%f36, %f24, %f24, %f35;
	rsqrt.approx.ftz.f32 	%f37, %f36;
	mul.ftz.f32 	%f1, %f22, %f37;
	mul.ftz.f32 	%f2, %f23, %f37;
	mul.ftz.f32 	%f3, %f24, %f37;
	ld.global.f32 	%f38, [ray+12];
	ld.global.f32 	%f39, [t_hit];
	ld.global.f32 	%f40, [ray+16];
	ld.global.f32 	%f41, [ray+20];
	ld.global.f32 	%f42, [ray];
	fma.rn.ftz.f32 	%f4, %f39, %f38, %f42;
	ld.global.f32 	%f43, [ray+4];
	fma.rn.ftz.f32 	%f5, %f39, %f40, %f43;
	ld.global.f32 	%f44, [ray+8];
	fma.rn.ftz.f32 	%f6, %f39, %f41, %f44;
	ld.global.v4.f32 	{%f45, %f46, %f47, %f48}, [lightPos];
	st.local.v4.f32 	[%rd2], {%f132, %f132, %f132, %f132};
	sub.ftz.f32 	%f49, %f4, %f45;
	sub.ftz.f32 	%f50, %f5, %f46;
	sub.ftz.f32 	%f51, %f6, %f47;
	neg.ftz.f32 	%f52, %f50;
	fma.rn.ftz.f32 	%f53, %f49, 0f00000000, %f52;
	fma.rn.ftz.f32 	%f54, %f51, 0f00000000, %f53;
	setp.lt.ftz.f32	%p2, %f54, 0f00000000;
	@%p2 bra 	BB3_2;
	bra.uni 	BB3_3;

BB3_2:
	mov.f32 	%f133, %f132;
	mov.f32 	%f134, %f132;
	mov.f32 	%f135, %f132;
	bra.uni 	BB3_5;

BB3_3:
	ld.global.v2.f32 	{%f59, %f60}, [lightSize];
	ld.global.u32 	%r3, [payload+20];
	mad.lo.s32 	%r4, %r3, 1664525, 1013904223;
	and.b32  	%r5, %r4, 16777215;
	cvt.rn.f32.u32	%f63, %r5;
	mov.f32 	%f64, 0f4B800000;
	div.approx.ftz.f32 	%f65, %f63, %f64;
	mad.lo.s32 	%r6, %r4, 1664525, 1013904223;
	st.global.u32 	[payload+20], %r6;
	and.b32  	%r7, %r6, 16777215;
	cvt.rn.f32.u32	%f66, %r7;
	div.approx.ftz.f32 	%f67, %f66, %f64;
	mul.ftz.f32 	%f68, %f59, 0f00000000;
	fma.rn.ftz.f32 	%f69, %f59, %f65, %f45;
	fma.rn.ftz.f32 	%f70, %f68, %f65, %f46;
	fma.rn.ftz.f32 	%f71, %f68, %f65, %f47;
	mul.ftz.f32 	%f72, %f60, 0f00000000;
	fma.rn.ftz.f32 	%f73, %f72, %f67, %f69;
	fma.rn.ftz.f32 	%f74, %f72, %f67, %f70;
	fma.rn.ftz.f32 	%f75, %f60, %f67, %f71;
	sub.ftz.f32 	%f76, %f73, %f4;
	sub.ftz.f32 	%f77, %f74, %f5;
	sub.ftz.f32 	%f78, %f75, %f6;
	mul.ftz.f32 	%f79, %f77, %f77;
	fma.rn.ftz.f32 	%f80, %f76, %f76, %f79;
	fma.rn.ftz.f32 	%f81, %f78, %f78, %f80;
	sqrt.approx.ftz.f32 	%f10, %f81;
	rsqrt.approx.ftz.f32 	%f82, %f81;
	mul.ftz.f32 	%f11, %f82, %f76;
	mul.ftz.f32 	%f12, %f82, %f77;
	mul.ftz.f32 	%f13, %f82, %f78;
	mul.ftz.f32 	%f83, %f2, %f12;
	fma.rn.ftz.f32 	%f84, %f1, %f11, %f83;
	fma.rn.ftz.f32 	%f14, %f3, %f13, %f84;
	mov.f32 	%f135, 0f3F800000;
	setp.leu.ftz.f32	%p3, %f14, 0f00000000;
	mov.f32 	%f133, %f132;
	mov.f32 	%f134, %f132;
	@%p3 bra 	BB3_5;

	fma.rn.ftz.f32 	%f94, %f11, 0f80000000, %f12;
	fma.rn.ftz.f32 	%f95, %f13, 0f80000000, %f94;
	mov.f32 	%f96, 0f00000000;
	max.ftz.f32 	%f97, %f96, %f95;
	mov.f32 	%f135, 0f3F800000;
	st.local.v4.f32 	[%rd2], {%f135, %f135, %f135, %f135};
	ld.global.u32 	%r9, [Shadow];
	cvt.ftz.f64.f32	%fd1, %f10;
	add.f64 	%fd2, %fd1, 0d3F847AE147AE147B;
	cvt.rn.ftz.f32.f64	%f92, %fd2;
	ld.global.u32 	%r8, [top_object];
	mov.f32 	%f91, 0f3DCCCCCD;
	mov.u32 	%r10, 32;
	// inline asm
	call _rt_trace_64, (%r8, %f4, %f5, %f6, %f11, %f12, %f13, %r9, %f91, %f92, %rd1, %r10);
	// inline asm
	ld.local.v4.f32 	{%f98, %f99, %f100, %f101}, [%rd2];
	mul.ftz.f32 	%f103, %f14, %f98;
	mul.ftz.f32 	%f105, %f14, %f99;
	mul.ftz.f32 	%f107, %f14, %f100;
	fma.rn.ftz.f32 	%f132, %f97, %f103, 0f00000000;
	fma.rn.ftz.f32 	%f133, %f97, %f105, 0f00000000;
	fma.rn.ftz.f32 	%f134, %f97, %f107, 0f00000000;

BB3_5:
	ld.global.v4.f32 	{%f108, %f109, %f110, %f111}, [diffuse];
	mul.ftz.f32 	%f116, %f132, %f108;
	mul.ftz.f32 	%f117, %f133, %f109;
	mul.ftz.f32 	%f118, %f134, %f110;
	mul.ftz.f32 	%f119, %f135, %f111;
	ld.global.v4.f32 	{%f120, %f121, %f122, %f123}, [payload];
	mul.ftz.f32 	%f125, %f119, %f123;
	mul.ftz.f32 	%f127, %f118, %f122;
	mul.ftz.f32 	%f129, %f121, %f117;
	mul.ftz.f32 	%f131, %f120, %f116;
	st.global.v4.f32 	[payload], {%f131, %f129, %f127, %f125};

BB3_6:
	ret;
}

	// .globl	_Z4missv
.visible .entry _Z4missv(

)
{
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f3F800000;
	st.global.v4.f32 	[payload], {%f1, %f1, %f1, %f1};
	ret;
}

	// .globl	_Z10missShadowv
.visible .entry _Z10missShadowv(

)
{
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f3F800000;
	st.global.v4.f32 	[payload], {%f1, %f1, %f1, %f1};
	ret;
}

	// .globl	_Z14any_hit_shadowv
.visible .entry _Z14any_hit_shadowv(

)
{
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f00000000;
	st.global.v4.f32 	[payload], {%f1, %f1, %f1, %f1};
	ret;
}

	// .globl	_Z10traceGlassv
.visible .entry _Z10traceGlassv(

)
{
	.local .align 16 .b8 	__local_depot7[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<93>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<6>;


	mov.u64 	%rd5, __local_depot7;
	cvta.local.u64 	%SP, %rd5;
	ld.global.u32 	%r1, [payload+16];
	setp.gt.s32	%p1, %r1, 3;
	@%p1 bra 	BB7_2;

	add.u64 	%rd1, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd1;
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd4, %rd2;
	ld.global.f32 	%f25, [t_hit];
	ld.global.f32 	%f26, [ray+12];
	ld.global.f32 	%f27, [ray+16];
	ld.global.f32 	%f28, [ray+20];
	ld.global.f32 	%f29, [ray];
	fma.rn.ftz.f32 	%f9, %f25, %f26, %f29;
	ld.global.f32 	%f30, [ray+4];
	fma.rn.ftz.f32 	%f10, %f25, %f27, %f30;
	ld.global.f32 	%f31, [ray+8];
	fma.rn.ftz.f32 	%f11, %f25, %f28, %f31;
	ld.global.f32 	%f5, [shading_normal];
	ld.global.f32 	%f6, [shading_normal+4];
	ld.global.f32 	%f7, [shading_normal+8];
	mov.u32 	%r2, 7937;
	mov.f32 	%f8, 0f00000000;
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_transform_tuple, (%r2, %f5, %f6, %f7, %f8);
	// inline asm
	mul.ftz.f32 	%f32, %f2, %f2;
	fma.rn.ftz.f32 	%f33, %f1, %f1, %f32;
	fma.rn.ftz.f32 	%f34, %f3, %f3, %f33;
	rsqrt.approx.ftz.f32 	%f35, %f34;
	mul.ftz.f32 	%f36, %f1, %f35;
	mul.ftz.f32 	%f37, %f2, %f35;
	mul.ftz.f32 	%f38, %f3, %f35;
	ld.global.f32 	%f20, [ray+12];
	ld.global.f32 	%f21, [ray+16];
	mul.ftz.f32 	%f39, %f21, %f21;
	fma.rn.ftz.f32 	%f40, %f20, %f20, %f39;
	ld.global.f32 	%f22, [ray+20];
	fma.rn.ftz.f32 	%f41, %f22, %f22, %f40;
	rsqrt.approx.ftz.f32 	%f42, %f41;
	mul.ftz.f32 	%f43, %f42, %f20;
	mul.ftz.f32 	%f44, %f42, %f21;
	mul.ftz.f32 	%f45, %f42, %f22;
	mul.ftz.f32 	%f46, %f36, %f43;
	mul.ftz.f32 	%f47, %f37, %f44;
	neg.ftz.f32 	%f48, %f47;
	sub.ftz.f32 	%f49, %f48, %f46;
	mul.ftz.f32 	%f50, %f38, %f45;
	sub.ftz.f32 	%f51, %f49, %f50;
	ld.global.f32 	%f52, [F];
	mov.f32 	%f53, 0f3F800000;
	sub.ftz.f32 	%f54, %f53, %f52;
	sub.ftz.f32 	%f55, %f53, %f51;
	lg2.approx.ftz.f32 	%f56, %f55;
	ld.global.f32 	%f57, [FresnelPower];
	mul.ftz.f32 	%f58, %f57, %f56;
	ex2.approx.ftz.f32 	%f59, %f58;
	fma.rn.ftz.f32 	%f60, %f54, %f59, %f52;
	add.ftz.f32 	%f61, %f36, %f36;
	add.ftz.f32 	%f62, %f37, %f37;
	add.ftz.f32 	%f63, %f38, %f38;
	mul.ftz.f32 	%f64, %f37, %f21;
	fma.rn.ftz.f32 	%f65, %f36, %f20, %f64;
	fma.rn.ftz.f32 	%f66, %f38, %f22, %f65;
	mul.ftz.f32 	%f67, %f61, %f66;
	mul.ftz.f32 	%f68, %f62, %f66;
	mul.ftz.f32 	%f69, %f63, %f66;
	sub.ftz.f32 	%f12, %f20, %f67;
	sub.ftz.f32 	%f13, %f21, %f68;
	sub.ftz.f32 	%f14, %f22, %f69;
	ld.global.u32 	%r4, [Phong];
	ld.global.v4.u32 	{%r9, %r10, %r11, %r12}, [payload+16];
	ld.global.v4.f32 	{%f70, %f71, %f72, %f73}, [payload];
	ld.global.v4.u8 	{%rs1, %rs2, %rs3, %rs4}, [payload+28];
	st.local.v4.u8 	[%rd3+28], {%rs1, %rs2, %rs3, %rs4};
	st.local.v4.f32 	[%rd3], {%f70, %f71, %f72, %f73};
	st.local.v2.u32 	[%rd3+16], {%r9, %r10};
	st.local.u32 	[%rd3+24], %r11;
	st.local.u8 	[%rd4+31], %rs4;
	st.local.u8 	[%rd4+30], %rs3;
	st.local.u8 	[%rd4+29], %rs2;
	st.local.u8 	[%rd4+28], %rs1;
	st.local.u32 	[%rd4+24], %r11;
	st.local.u32 	[%rd4+20], %r10;
	st.local.u32 	[%rd4+16], %r9;
	st.local.f32 	[%rd4+12], %f73;
	st.local.f32 	[%rd4+8], %f72;
	st.local.f32 	[%rd4+4], %f71;
	st.local.f32 	[%rd4], %f70;
	ld.global.u32 	%r3, [top_object];
	mov.f32 	%f23, 0f3A83126F;
	mov.f32 	%f24, 0f459C4000;
	mov.u32 	%r8, 32;
	// inline asm
	call _rt_trace_64, (%r3, %f9, %f10, %f11, %f12, %f13, %f14, %r4, %f23, %f24, %rd1, %r8);
	// inline asm
	ld.global.u32 	%r6, [top_object];
	// inline asm
	call _rt_trace_64, (%r6, %f9, %f10, %f11, %f20, %f21, %f22, %r4, %f23, %f24, %rd2, %r8);
	// inline asm
	ld.local.f32 	%f78, [%rd4];
	ld.local.f32 	%f79, [%rd3];
	sub.ftz.f32 	%f80, %f79, %f78;
	ld.local.f32 	%f81, [%rd4+4];
	ld.local.f32 	%f82, [%rd3+4];
	sub.ftz.f32 	%f83, %f82, %f81;
	ld.local.f32 	%f84, [%rd4+8];
	ld.local.f32 	%f85, [%rd3+8];
	sub.ftz.f32 	%f86, %f85, %f84;
	fma.rn.ftz.f32 	%f87, %f60, %f80, %f78;
	fma.rn.ftz.f32 	%f88, %f60, %f83, %f81;
	fma.rn.ftz.f32 	%f89, %f60, %f86, %f84;
	mul.ftz.f32 	%f90, %f87, 0f3F666666;
	mul.ftz.f32 	%f91, %f88, 0f3F666666;
	mul.ftz.f32 	%f92, %f89, 0f3F666666;
	st.global.f32 	[payload], %f90;
	st.global.f32 	[payload+4], %f91;
	st.global.f32 	[payload+8], %f92;
	mov.u32 	%r16, 1065353216;
	st.global.u32 	[payload+12], %r16;

BB7_2:
	ret;
}

	// .globl	_Z15keepGoingShadowv
.visible .entry _Z15keepGoingShadowv(

)
{
	.reg .f32 	%f<36>;
	.reg .b32 	%r<2>;


	ld.global.f32 	%f5, [shading_normal];
	ld.global.f32 	%f6, [shading_normal+4];
	ld.global.f32 	%f7, [shading_normal+8];
	mov.u32 	%r1, 7937;
	mov.f32 	%f8, 0f00000000;
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_transform_tuple, (%r1, %f5, %f6, %f7, %f8);
	// inline asm
	mul.ftz.f32 	%f9, %f2, %f2;
	fma.rn.ftz.f32 	%f10, %f1, %f1, %f9;
	fma.rn.ftz.f32 	%f11, %f3, %f3, %f10;
	rsqrt.approx.ftz.f32 	%f12, %f11;
	mul.ftz.f32 	%f13, %f1, %f12;
	mul.ftz.f32 	%f14, %f2, %f12;
	mul.ftz.f32 	%f15, %f3, %f12;
	ld.global.f32 	%f16, [ray+12];
	ld.global.f32 	%f17, [ray+16];
	mul.ftz.f32 	%f18, %f14, %f17;
	fma.rn.ftz.f32 	%f19, %f13, %f16, %f18;
	ld.global.f32 	%f20, [ray+20];
	fma.rn.ftz.f32 	%f21, %f15, %f20, %f19;
	abs.ftz.f32 	%f22, %f21;
	sqrt.approx.ftz.f32 	%f23, %f22;
	ld.global.v4.f32 	{%f24, %f25, %f26, %f27}, [payload];
	mul.ftz.f32 	%f29, %f23, %f27;
	mul.ftz.f32 	%f31, %f23, %f26;
	mul.ftz.f32 	%f33, %f23, %f25;
	mul.ftz.f32 	%f35, %f23, %f24;
	st.global.v4.f32 	[payload], {%f35, %f33, %f31, %f29};
	// inline asm
	call _rt_ignore_intersection, ();
	// inline asm
	ret;
}

	// .globl	_Z20geometryintersectioni
.visible .entry _Z20geometryintersectioni(
	.param .u32 _Z20geometryintersectioni_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<152>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<117>;


	ld.param.u32 	%r13, [_Z20geometryintersectioni_param_0];
	mul.lo.s32 	%r14, %r13, 3;
	cvt.s64.s32	%rd6, %r14;
	mov.u64 	%rd40, index_buffer;
	cvta.global.u64 	%rd5, %rd40;
	mov.u32 	%r11, 1;
	mov.u32 	%r10, 4;
	mov.u64 	%rd39, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd6, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd12, [%rd4];
	mov.u64 	%rd41, vertex_buffer;
	cvta.global.u64 	%rd11, %rd41;
	mov.u32 	%r12, 16;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd12, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f7, %f8, %f9, %f10}, [%rd10];
	add.s32 	%r15, %r14, 1;
	cvt.s64.s32	%rd18, %r15;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd18, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd24, [%rd16];
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd24, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f14, %f15, %f16, %f17}, [%rd22];
	add.s32 	%r16, %r14, 2;
	cvt.s64.s32	%rd30, %r16;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd30, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd36, [%rd28];
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd36, %rd39, %rd39, %rd39);
	// inline asm
	sub.ftz.f32 	%f21, %f14, %f7;
	sub.ftz.f32 	%f22, %f15, %f8;
	sub.ftz.f32 	%f23, %f16, %f9;
	ld.v4.f32 	{%f24, %f25, %f26, %f27}, [%rd34];
	sub.ftz.f32 	%f31, %f7, %f24;
	sub.ftz.f32 	%f32, %f8, %f25;
	sub.ftz.f32 	%f33, %f9, %f26;
	mul.ftz.f32 	%f34, %f23, %f32;
	mul.ftz.f32 	%f35, %f22, %f33;
	sub.ftz.f32 	%f1, %f34, %f35;
	mul.ftz.f32 	%f36, %f21, %f33;
	mul.ftz.f32 	%f37, %f23, %f31;
	sub.ftz.f32 	%f2, %f36, %f37;
	mul.ftz.f32 	%f38, %f22, %f31;
	mul.ftz.f32 	%f39, %f21, %f32;
	sub.ftz.f32 	%f3, %f38, %f39;
	ld.global.f32 	%f40, [ray+12];
	ld.global.f32 	%f41, [ray+16];
	mul.ftz.f32 	%f42, %f41, %f2;
	fma.rn.ftz.f32 	%f43, %f40, %f1, %f42;
	ld.global.f32 	%f44, [ray+20];
	fma.rn.ftz.f32 	%f45, %f44, %f3, %f43;
	rcp.approx.ftz.f32 	%f46, %f45;
	ld.global.f32 	%f47, [ray];
	sub.ftz.f32 	%f48, %f7, %f47;
	ld.global.f32 	%f49, [ray+4];
	sub.ftz.f32 	%f50, %f8, %f49;
	ld.global.f32 	%f51, [ray+8];
	sub.ftz.f32 	%f52, %f9, %f51;
	mul.ftz.f32 	%f53, %f46, %f48;
	mul.ftz.f32 	%f54, %f46, %f50;
	mul.ftz.f32 	%f55, %f46, %f52;
	mul.ftz.f32 	%f56, %f41, %f55;
	mul.ftz.f32 	%f57, %f54, %f44;
	sub.ftz.f32 	%f58, %f56, %f57;
	mul.ftz.f32 	%f59, %f53, %f44;
	mul.ftz.f32 	%f60, %f55, %f40;
	sub.ftz.f32 	%f61, %f59, %f60;
	mul.ftz.f32 	%f62, %f54, %f40;
	mul.ftz.f32 	%f63, %f53, %f41;
	sub.ftz.f32 	%f64, %f62, %f63;
	mul.ftz.f32 	%f65, %f32, %f61;
	fma.rn.ftz.f32 	%f66, %f31, %f58, %f65;
	fma.rn.ftz.f32 	%f4, %f33, %f64, %f66;
	mul.ftz.f32 	%f67, %f22, %f61;
	fma.rn.ftz.f32 	%f68, %f21, %f58, %f67;
	fma.rn.ftz.f32 	%f5, %f23, %f64, %f68;
	mul.ftz.f32 	%f69, %f2, %f54;
	fma.rn.ftz.f32 	%f70, %f1, %f53, %f69;
	fma.rn.ftz.f32 	%f6, %f3, %f55, %f70;
	ld.global.f32 	%f71, [ray+32];
	setp.lt.ftz.f32	%p1, %f6, %f71;
	ld.global.f32 	%f72, [ray+28];
	setp.gt.ftz.f32	%p2, %f6, %f72;
	and.pred  	%p3, %p1, %p2;
	setp.ge.ftz.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.ftz.f32	%p6, %f5, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.ftz.f32 	%f73, %f4, %f5;
	setp.le.ftz.f32	%p8, %f73, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB9_3;
	bra.uni 	BB9_1;

BB9_1:
	// inline asm
	call (%r17), _rt_potential_intersection, (%f6);
	// inline asm
	setp.eq.s32	%p10, %r17, 0;
	@%p10 bra 	BB9_3;

	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd6, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd50, [%rd42];
	mov.u64 	%rd115, normal;
	cvta.global.u64 	%rd49, %rd115;
	// inline asm
	call (%rd48), _rt_buffer_get_64, (%rd49, %r11, %r12, %rd50, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f75, %f76, %f77, %f78}, [%rd48];
	// inline asm
	call (%rd54), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd18, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd62, [%rd54];
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd49, %r11, %r12, %rd62, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f82, %f83, %f84, %f85}, [%rd60];
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd30, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd74, [%rd66];
	// inline asm
	call (%rd72), _rt_buffer_get_64, (%rd49, %r11, %r12, %rd74, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f89, %f90, %f91, %f92}, [%rd72];
	// inline asm
	call (%rd78), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd6, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd86, [%rd78];
	mov.u64 	%rd116, texCoord0;
	cvta.global.u64 	%rd85, %rd116;
	// inline asm
	call (%rd84), _rt_buffer_get_64, (%rd85, %r11, %r12, %rd86, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f96, %f97, %f98, %f99}, [%rd84];
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd18, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd98, [%rd90];
	// inline asm
	call (%rd96), _rt_buffer_get_64, (%rd85, %r11, %r12, %rd98, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f103, %f104, %f105, %f106}, [%rd96];
	// inline asm
	call (%rd102), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd30, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd110, [%rd102];
	// inline asm
	call (%rd108), _rt_buffer_get_64, (%rd85, %r11, %r12, %rd110, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f110, %f111, %f112, %f113}, [%rd108];
	mov.f32 	%f117, 0f3F800000;
	sub.ftz.f32 	%f118, %f117, %f4;
	sub.ftz.f32 	%f119, %f118, %f5;
	mul.ftz.f32 	%f120, %f4, %f82;
	mul.ftz.f32 	%f121, %f4, %f83;
	mul.ftz.f32 	%f122, %f4, %f84;
	fma.rn.ftz.f32 	%f123, %f119, %f75, %f120;
	fma.rn.ftz.f32 	%f124, %f119, %f76, %f121;
	fma.rn.ftz.f32 	%f125, %f119, %f77, %f122;
	fma.rn.ftz.f32 	%f126, %f5, %f89, %f123;
	fma.rn.ftz.f32 	%f127, %f5, %f90, %f124;
	fma.rn.ftz.f32 	%f128, %f5, %f91, %f125;
	mul.ftz.f32 	%f129, %f127, %f127;
	fma.rn.ftz.f32 	%f130, %f126, %f126, %f129;
	fma.rn.ftz.f32 	%f131, %f128, %f128, %f130;
	rsqrt.approx.ftz.f32 	%f132, %f131;
	mul.ftz.f32 	%f133, %f126, %f132;
	mul.ftz.f32 	%f134, %f127, %f132;
	mul.ftz.f32 	%f135, %f128, %f132;
	st.global.f32 	[shading_normal], %f133;
	st.global.f32 	[shading_normal+4], %f134;
	st.global.f32 	[shading_normal+8], %f135;
	mul.ftz.f32 	%f136, %f4, %f103;
	mul.ftz.f32 	%f137, %f4, %f104;
	mul.ftz.f32 	%f138, %f4, %f105;
	fma.rn.ftz.f32 	%f139, %f119, %f96, %f136;
	fma.rn.ftz.f32 	%f140, %f119, %f97, %f137;
	fma.rn.ftz.f32 	%f141, %f119, %f98, %f138;
	fma.rn.ftz.f32 	%f142, %f5, %f110, %f139;
	fma.rn.ftz.f32 	%f143, %f5, %f111, %f140;
	fma.rn.ftz.f32 	%f144, %f5, %f112, %f141;
	st.global.f32 	[texCoord], %f142;
	st.global.f32 	[texCoord+4], %f143;
	st.global.f32 	[texCoord+8], %f144;
	mul.ftz.f32 	%f145, %f2, %f2;
	fma.rn.ftz.f32 	%f146, %f1, %f1, %f145;
	fma.rn.ftz.f32 	%f147, %f3, %f3, %f146;
	rsqrt.approx.ftz.f32 	%f148, %f147;
	mul.ftz.f32 	%f149, %f1, %f148;
	mul.ftz.f32 	%f150, %f2, %f148;
	mul.ftz.f32 	%f151, %f3, %f148;
	st.global.f32 	[geometric_normal], %f149;
	st.global.f32 	[geometric_normal+4], %f150;
	st.global.f32 	[geometric_normal+8], %f151;
	mov.u32 	%r43, 0;
	// inline asm
	call (%r42), _rt_report_intersection, (%r43);
	// inline asm

BB9_3:
	ret;
}

	// .globl	_Z11boundingboxiPf
.visible .entry _Z11boundingboxiPf(
	.param .u32 _Z11boundingboxiPf_param_0,
	.param .u64 _Z11boundingboxiPf_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<54>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<42>;


	ld.param.u32 	%r13, [_Z11boundingboxiPf_param_0];
	ld.param.u64 	%rd3, [_Z11boundingboxiPf_param_1];
	mul.lo.s32 	%r14, %r13, 3;
	cvt.s64.s32	%rd6, %r14;
	mov.u64 	%rd40, index_buffer;
	cvta.global.u64 	%rd5, %rd40;
	mov.u32 	%r11, 1;
	mov.u32 	%r10, 4;
	mov.u64 	%rd39, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd6, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd12, [%rd4];
	mov.u64 	%rd41, vertex_buffer;
	cvta.global.u64 	%rd11, %rd41;
	mov.u32 	%r12, 16;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd12, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f11, %f12, %f13, %f14}, [%rd10];
	add.s32 	%r15, %r14, 1;
	cvt.s64.s32	%rd18, %r15;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd18, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd24, [%rd16];
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd24, %rd39, %rd39, %rd39);
	// inline asm
	ld.v4.f32 	{%f15, %f16, %f17, %f18}, [%rd22];
	add.s32 	%r16, %r14, 2;
	cvt.s64.s32	%rd30, %r16;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd5, %r11, %r10, %rd30, %rd39, %rd39, %rd39);
	// inline asm
	ld.u32 	%rd36, [%rd28];
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd11, %r11, %r12, %rd36, %rd39, %rd39, %rd39);
	// inline asm
	sub.ftz.f32 	%f19, %f15, %f11;
	sub.ftz.f32 	%f20, %f16, %f12;
	sub.ftz.f32 	%f21, %f17, %f13;
	ld.v4.f32 	{%f22, %f23, %f24, %f25}, [%rd34];
	sub.ftz.f32 	%f26, %f22, %f11;
	sub.ftz.f32 	%f27, %f23, %f12;
	sub.ftz.f32 	%f28, %f24, %f13;
	mul.ftz.f32 	%f29, %f20, %f28;
	mul.ftz.f32 	%f30, %f21, %f27;
	sub.ftz.f32 	%f31, %f29, %f30;
	mul.ftz.f32 	%f32, %f21, %f26;
	mul.ftz.f32 	%f33, %f19, %f28;
	sub.ftz.f32 	%f34, %f32, %f33;
	mul.ftz.f32 	%f35, %f19, %f27;
	mul.ftz.f32 	%f36, %f20, %f26;
	sub.ftz.f32 	%f37, %f35, %f36;
	mul.ftz.f32 	%f38, %f34, %f34;
	fma.rn.ftz.f32 	%f39, %f31, %f31, %f38;
	fma.rn.ftz.f32 	%f40, %f37, %f37, %f39;
	sqrt.approx.ftz.f32 	%f10, %f40;
	mov.pred 	%p5, 0;
	setp.leu.ftz.f32	%p4, %f10, 0f00000000;
	@%p4 bra 	BB10_2;

	abs.ftz.f32 	%f41, %f10;
	setp.neu.ftz.f32	%p5, %f41, 0f7F800000;

BB10_2:
	cvta.to.global.u64 	%rd2, %rd3;
	@%p5 bra 	BB10_4;
	bra.uni 	BB10_3;

BB10_4:
	min.ftz.f32 	%f42, %f11, %f15;
	min.ftz.f32 	%f43, %f42, %f22;
	min.ftz.f32 	%f44, %f12, %f16;
	min.ftz.f32 	%f45, %f44, %f23;
	min.ftz.f32 	%f46, %f13, %f17;
	min.ftz.f32 	%f47, %f46, %f24;
	st.global.f32 	[%rd2], %f43;
	st.global.f32 	[%rd2+4], %f45;
	st.global.f32 	[%rd2+8], %f47;
	max.ftz.f32 	%f48, %f11, %f15;
	max.ftz.f32 	%f49, %f48, %f22;
	max.ftz.f32 	%f50, %f12, %f16;
	max.ftz.f32 	%f51, %f50, %f23;
	max.ftz.f32 	%f52, %f13, %f17;
	max.ftz.f32 	%f53, %f52, %f24;
	st.global.f32 	[%rd2+12], %f49;
	st.global.f32 	[%rd2+16], %f51;
	st.global.f32 	[%rd2+20], %f53;
	bra.uni 	BB10_5;

BB10_3:
	mov.u32 	%r17, 2096152002;
	st.global.u32 	[%rd2+8], %r17;
	st.global.u32 	[%rd2+4], %r17;
	st.global.u32 	[%rd2], %r17;
	mov.u32 	%r18, -51331646;
	st.global.u32 	[%rd2+20], %r18;
	st.global.u32 	[%rd2+16], %r18;
	st.global.u32 	[%rd2+12], %r18;

BB10_5:
	ret;
}


